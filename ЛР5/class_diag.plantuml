@startuml
'left to right direction
top to bottom direction
skinparam linestyle ortho

class AuthForm 
note right: Окно авторизации

class MainForm 
note right: Главное окно

interface DBConnectionIface{
+  checkConnection(String na, String port, String user,\n String password, String dbname) : ConnectionResult
+  disconnect() : ConnectionResult
+  getSpecialityByCode(String code) : QueryResult
+  getSpecialityCodeList() : QueryResult
+  addSpeciality(Speciality sp) : boolean
+  updateSpecialityByCode(String code, Speciality sp) : boolean
+  deleteSpecialityByCode(String code) : boolean
+  getSubjectNameList() : QueryResult
+  getSubjectIDByName(String Name) : QueryResult
}
class SpecialityForm
note left: Окно для работы\nс таблицей Speciality
class QueryResult{
- res : boolean
- ls : ArrayList<String>
- spec : Speciality 
- message : String 
+ QueryResult(boolean flag, ArrayList<String> list,\n Speciality pointer,String msg)
+  getResult() : boolean
+ ArrayList<String> getList() 
+  getString() : String
+  getInt()  : int
+  getSpec() : Speciality
+  getMessage() : String
}
class PGSQLDBConnection{
- connection : Connection
- preparedStatement : PreparedStatement
- resultset : ResultSet
- connProperties : Properties
- dbUrl : String
- {static} DATABASE_USER = "user" : String 
- {static} DATABASE_PASSWORD = "password" : String 
- setConnectionProperties(String na, String port, String user,\n String pw, String dbName) : void
- connectWithProps() : ConnectionResult
+ pgsql_db_connection() : void
+ checkConnection(String na, String port, String user,\n String password, String dbname) : ConnectionResult
- connect(String na, String port, String user,\n String password, String dbname) : ConnectionResult
+ disconnect() : ConnectionResult
+  getSpecialityByCode(String code) : QueryResult
+ getSpecialityCodeList() : QueryResult
+ addSpeciality(Speciality sp) : boolean
+ updateSpecialityByCode(String code, Speciality sp) : boolean
+ deleteSpecialityByCode(String code) : boolean
+ getSubjectNameList() : QueryResult
+ getSubjectIDByName(String name) : QueryResult
}
class java.sql.Connection
class java.sql.PreparedStatement
class java.sql.ResultSet

class ConnectionResult{
- result : boolean
- message : String
+ ConnectionResult(boolean r, String m)
+ getResult() : boolean
+ getMessage() : String
}

AuthForm ..> ConnectionResult
ConnectionResult ..> DBConnectionIface

class dbapp
note right: Главная программа

interface DBProcIface{
+ fillListWQueryResults(QueryResult qr,\n DefaultListModel<String> dlm) : void <<default>>
+ fillComboBoxWQueryResults(QueryResult qr,\n DefaultComboBoxModel<String> dcbm) : void <<default>>
}
note right: Интерфейс для вывода\n данных из БД

dbapp *-- AuthForm
dbapp *-- MainForm

AuthForm --> MainForm
AuthForm o-- DBConnectionIface

MainForm o-- DBConnectionIface
MainForm *-- SpecialityForm

SpecialityForm o-- DBConnectionIface
SpecialityForm ..|> DBProcIface

QueryResult ..> DBConnectionIface
QueryResult <..  DBProcIface

PGSQLDBConnection ..|> DBConnectionIface
PGSQLDBConnection *-- java.sql.Connection
PGSQLDBConnection *-- java.sql.PreparedStatement
PGSQLDBConnection *-- java.sql.ResultSet

@enduml
